{"version":3,"file":"static/js/870.54613ba2.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.js","hoc/HoC.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__FSOzv\",\"mainPhoto\":\"ProfileInfo_mainPhoto__AU0c8\"};","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect( () => {\r\n    setStatus (props.status);\r\n}, [ props.status] );\r\n\r\n   const  activatedMode = () => {\r\n       setEditMode(true)\r\n    }\r\n\r\n    const deactivatedMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activatedMode}> {props.status || \"---------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}  autoFocus={true} onBlur={deactivatedMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/images.jpg\"\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto }) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto } className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__jkrGA\",\"posts\":\"MyPosts_posts__fo4tp\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__TzwmP\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://i.yapx.cc/PdTRP.jpg\" alt=\"\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Like</span> {props.likesCounts}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst  MyPosts =(props) => {\r\n    console.log(\"render yo\")\r\n    let postsElement = props.posts.map(p => <Post message={p.message} likesCounts={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  component={Textarea} name=\"newPostText\" placeholder= \"Enter post\" validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*/\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"../Profile\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {withNavigate} from \"../../../hoc/HoC\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = {params: useParams()};\r\n        return <Children {...props} match={match}/>\r\n    }\r\n};\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n\r\n        let userId = this.props.match.params.userID;\r\n        if (!userId) {\r\n\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.navigate('/login')\r\n            }\r\n\r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID != prevProps.match.params.userID) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userID}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhot={this.props.savePhoto}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withNavigate,\r\n    //withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const withNavigate = (Component) => {\r\n    let RedirectTo = (props) => {\r\n        return < Component{...props} navigate={useNavigate()}/>\r\n    }\r\n    return RedirectTo;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","isOwner","savePhoto","Preloader","className","s","src","photos","large","userPhoto","type","target","files","length","alt","message","likesCounts","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","console","log","postsElement","posts","map","p","likesCount","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","isAuth","to","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","userID","authorizedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","savePhot","React","compose","auth","id","Component","useNavigate"],"sourceRoot":""}