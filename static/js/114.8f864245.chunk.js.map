{"version":3,"file":"static/js/114.8f864245.chunk.js","mappings":"0LACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,2B,mBCc1I,EAXoB,SAACA,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,iBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,WACtC,gBAAKC,IAAI,2DAA2DC,IAAI,MACxE,UAAC,KAAO,CAACC,GAAIN,EAAK,UAAED,EAAMQ,KAAK,SAI3C,ECOA,EAhBgB,SAACR,GAGb,OACI,0BACI,0BACI,gBAAKG,UAAWC,EAAAA,QAAU,SAAEJ,EAAMS,aAOlD,E,iDCTMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAhBuB,SAACb,GACpB,OACI,kBAAMc,SAAUd,EAAMe,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GACXV,KAAK,iBACLW,YAAY,oBACZC,SAAU,CAACC,EAAAA,EAAUX,QAEhC,0BACI,4BAAQ,oBAIxB,ICeA,EAhCgB,SAACV,GACb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAW,CAACnB,KAAMmB,EAAEnB,KAAiBN,GAAIyB,EAAEzB,IAAZyB,EAAEzB,GAAe,IAEzF0B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACrB,QAASqB,EAAErB,SAAcqB,EAAE5B,GAAK,IAElEoB,EAAMS,eAQ3B,OAAK/B,EAAMgC,QAGP,iBAAK7B,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,YAAc,SACzBoB,KAEL,gBAAKrB,UAAWC,EAAAA,SAAW,SACtBwB,KAEL,SAAC,EAAc,CAACd,SAfJ,SAACmB,GACjBjC,EAAMkC,YAAYD,EAAOF,eAE7B,QAE0B,SAAC,KAAQ,CAACxB,GAAI,UAa5C,E,0DC/BI4B,EAA6B,SAACb,GAAK,MAAM,CACzCU,OAAQV,EAAMc,KAAKJ,OACtB,ECqBD,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAG3B,IAEyB,SAACgB,GACtB,MAAO,CACHL,YAAa,SAACH,GACVQ,GAASC,EAAAA,EAAAA,GAAmBT,GAChC,EAGR,KDjBgC,SAACU,GAAe,IACtCC,EAAiB,qGAMlB,OANkB,8BACnB,WACI,OAAKC,KAAK3C,MAAMgC,QAGT,SAACS,GAAS,UAAIE,KAAK3C,SAFf,SAAC,KAAQ,CAACO,GAAI,UAG7B,KAAC,EANkB,CAASqC,EAAAA,WAShC,OADqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAqCI,EAE9E,GCQA,CAGEG,E","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__6YmrZ\",\"dialogsItem\":\"Dialogs_dialogsItem__Jk-a5\",\"dialog\":\"Dialogs_dialog__rFczp\",\"messages\":\"Dialogs_messages__twAmo\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://klike.net/uploads/posts/2019-03/1551511823_2.jpg\" alt=\"\"/>\r\n            <NavLink to={path}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.dialogs}>{props.message}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter you message\"\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form :'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from 'react-router-dom'\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>;\r\n            }\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n//import {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"names":["props","path","id","className","s","src","alt","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}